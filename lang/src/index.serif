import {attempt} from "fluture";

import * from "./Node.serif";
import esModuleFromSerifModule from "./codegen.serif";
import * as grammar from "./grammar.js";
import rewrite from "./rewrite.serif";

export {
  parse,
  rewrite,
  changeExtensions,
  esModuleFromSerifModule,
};

parse filename sourceText = {
  attempt \() -> grammar.parse (sourceText, {grammarSource: filename})
};

changeExtensionInImportDeclaration {source, specifiers} = {
  source' = StringLiteral $ .replace [RegExp "[.]serif$", ".js"] source.value;
  ImportDeclaration source' specifiers
};

changeExtensions {imports, exports, statements} = {
  Module (changeExtensionInImportDeclaration <$> imports) exports statements
};
