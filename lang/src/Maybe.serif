export default {Nothing, Just, [Symbol.for "match"]: match};
export {
  Nothing,
  Just,
  maybe,
  fromMaybe,
  fromNullable,
};

Nothing = {
  [Symbol.for "tag"]: "Nothing",
  fantasy-land/map: \f -> Nothing,
};

Just value = {
  [Symbol.for "tag"]: "Just",
  value,
  fantasy-land/map: \f -> Just $ f value,
};

match default cases maybe = {
  if apply Object.hasOwn [cases, maybe[Symbol.for "tag"]] then {
    switch maybe[Symbol.for "tag"]
    when "Nothing" then cases.Nothing
    when "Just"    then cases.Just maybe.value
  } else {
    default maybe
  }
};

maybe Nothing Just = match null {Nothing, Just};

fromMaybe default = maybe default id;

fromNullable x = if x == null or x == undefined then Nothing else Just x;
