export default Node;
export * hiding {Node};

type Node =
  | ArrayExpression [elements]
  | ArrayPattern [elements]
  | ArrowAssignmentStatement (pattern) (expression)
  | ArrowFunctionExpression [parameters] (body)
  | Block [statements] [result]
  | BooleanLiteral value
  | CallExpression (callee) [arguments]
  | ConditionalExpression (predicate) (consequent) [alternative]
  | DataConstructorDefinition (identifier) [parameters]
  | DataConstructorParameter (identifier) recursionDepth
  | DataTypeDeclaration (identifier) [constructors]
  | DoBlockExpression [operations] (result)
  | Elision
  | EmptySection operator
  | ExportAllSpecifier [hiding]
  | ExportDefaultDeclaration (declaration)
  | ExportNamedDeclaration [specifiers]
  | ExportSpecifier (local) (exported)
  | ExpressionStatement (expression)
  | FunctionDeclaration name parameters (body)
  | Identifier name
  | ImportAllSpecifier [hiding]
  | ImportDeclaration source [specifiers]
  | ImportDefaultSpecifier (local)
  | ImportNamespaceSpecifier (local)
  | ImportSpecifier (imported) (local)
  | InfixCallExpression operator (left) (right)
  | InfixExpression operator (left) (right)
  | LeftSection operator (operand)
  | MemberExpression (object) (property)
  | MethodCallExpression name
  | Module [imports] [exports] [statements]
  | NullLiteral
  | NumberLiteral value
  | ObjectExpression [properties]
  | ObjectPattern [properties]
  | PrefixExpression operator (operand)
  | Property (key) (value)
  | PropertyAccessor (identifier)
  | RestElement (argument)
  | RightSection operator (operand)
  | SpreadElement (argument)
  | StringLiteral value
  | SwitchCase [[predicates]] (consequent)
  | SwitchExpression (discriminant) [cases]
  | TemplateLiteral quasis [expressions]
  | VariableDeclaration (pattern) (expression)
;
