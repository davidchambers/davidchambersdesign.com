import * from "./elements.serif";

styled class copy = span {class} [text copy];

comment           = styled "comment";
delimGroup        = styled "delimiter group";
delimArray        = styled "delimiter array";
delimObject       = styled "delimiter object";
delimiter         = styled "delimiter";
separator         = styled "separator";
identIntro        = styled "identifier introduction";
identRef          = styled "identifier reference";
boolean           = styled "boolean";
nullLiteral       = styled "null" "null";
undefinedLiteral  = styled "undefined" "undefined";
number            = styled "number";
string            = styled "string";
propertyName      = styled "property-name";
propertyAccessor  = styled "property-accessor";
operator          = styled "operator";
signature         = styled "signature";

_ = text " ";
en = [_, separator "\x2013", _];

operators [op, ...ops] = {
  link op = a {href: "#operator:" <> op} [code [operator op]];
  [link op] <> (ops >>= \op -> [text " ", link op])
};

expression = code' {class: "expression"} . (<> [text "\n"]);
result     = code' {class: "result"}     . (<> [text "\n"]);

document = html [
  head [
    meta {charset: "utf-8"},
    link {rel: "stylesheet", href: "https://fonts.googleapis.com/css?family=Crimson+Text:regular,italic,semibold|Fira+Code|Poppins:medium,bold"},
    link {rel: "stylesheet", href: "./style.css"},
  ],
  body [
    header [
      h1 ["Serif"],
    ],
    main [
      h1 [
        "Motivation",
      ],
      p [
        "There are many well-designed programming languages in existence. Why create a new one?",
      ],
      p [
        "Before explaining my reasons I must share a few things about myself. While studying graphic design at university I became interested in web development. In 2008 I began to learn Python, PHP, and JavaScript in order to build websites. In 2010 I began programming professionally. Since then I have become deeply involved in the JavaScript ecosystem.",
      ],
      p [
        "In 2015 I updated my website to read as follows:",
      ],
      blockquote [
        p [
          "I ", b ["fight complexity"], " in the software industry.",
        ],
        p [
          "Iâ€™m currently ", b ["fixing JavaScript"], ", which will take some time!",
        ],
      ],
      p [
        "That same year I began developing ", a {href: "https://sanctuary.js.org/"} ["Sanctuary"], ", a functional programming library I viewed as the successor to ", a {href: "https://ramdajs.com"} ["Ramda"], ". Sanctuary exposed the JavaScript community to good ideas from functional programming languages: curried functions, parametric polymorphism, and algebraic data types.",
      ],
      p [
        "In 2020 I began developing a static site generator. I chose Node.js as the runtime so I could leverage Sanctuary and other JavaScript libraries I know and like.",
      ],
      p [
        "Creating a DSL in JavaScript was a frustrating experience; JSX exists because any JavaScript representation of an HTML document contains significant syntactic noise.",
      ],
      pre [
        code [
          text """
            article([
              header([
                h1(post.title),
                time({
                  datetime: post.datetime.toFormat("yyyy-MM-dd'T'HH:mm:ssZZ"),
                  pubdate: "pubdate",
                }, [
                  post.datetime.toFormat("d MMMM y"),
                ]),
              ]),
              ...post.body,
              footer({class: "metadata"}, [
                ...{
                  post.tags.length === 0 ? [] : [
                    h4("This post has the following tags:"),
                    ol(post.tags.map(tag =>
                      li([a({href: "/tag/" + tag + "/"}, [tags[tag]]]))
                    )),
                  ]
                },
              ]),
            ])
          """
        ],
      ],
      h2 [
        "Why not Haskell?",
      ],
      p [
        "TK.",
      ],
      h2 [
        "Why not PureScript?",
      ],
      p [
        "TK.",
      ],
      h2 [
        "Why not Elm?",
      ],
      p [
        "TK.",
      ],
      h2 [
        "Why not TypeScript?",
      ],
      p [
        "TK.",
      ],
      h2 [
        "Why not JavaScript?",
      ],
      p [
        "TK.",
      ],
    ],
  ],
];

document.render {indent: "  ", level: 0, inline: false}
& concat "<!DOCTYPE html>\n"
& .replace [RegExp "\n$", ""]
& console.log;
