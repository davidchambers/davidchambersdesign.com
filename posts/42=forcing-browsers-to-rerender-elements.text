{:datetime (datetime "2010-03-22" "19:40:00" :Pacific/Auckland)
 :tags ["DOM" "IE" "JavaScript"]}


# Forcing browsers to rerender elements

Generally speaking browsers rerender elements as required â€“ in response to DOM
changes effected via JavaScript, for instance. There are times, though, when
the browser _(Internet Explorer, I'm looking at you!)_ needs a gentle nudge.

[Forcing a UI redraw from JavaScript][1] highlights the solution employed by
Thomas Fuchs, creator of the popular JavaScript library [script.aculo.us][2]:

    :::javascript
    Element.addMethods({
        redraw: function (element) {
            element = $(element);
            var n = document.createTextNode(' ');
            element.appendChild(n);
            (function () { n.parentNode.removeChild(n); }).defer();
            return element;
        }
    });

The post's first comment includes an alternative approach:

    :::javascript
    element.className = element.className;

I gather that there are situations in which this simple solution fails -- it's
no silver bullet -- but it fixed a problem I encountered in IE8 earlier this
evening so I'm pleased to have discovered it!


[1]: http://ajaxian.com/archives/forcing-a-ui-redraw-from-javascript
[2]: http://script.aculo.us/
