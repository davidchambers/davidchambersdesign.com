{:datetime (datetime "2009-08-31" "03:36:00" :Pacific/Auckland)
 :tags ["best practice" "CSS" "HTML" "JavaScript" "jQuery" "meaningful markup"]}


# Captions over images

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

This is my response to Chris Coyier's screencast titled [jQuery Part 3 – Image
Title Plugin][1] which I watched a couple of days ago. Something didn't sit
right with me at the time, and I've now worked out what it was: **JavaScript
is not required!**

I'll present a JavaScript-free approach for displaying captions over images
that uses _truly_ meaningful markup.

* * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *

So what _is_ meaningful markup for images and image captions? This is a debated
issue, but I believe the definition list to be the most appropriate element at
our disposal. While an image is clearly not a "term", a caption does _describe_
an image, just as a definition _describes_ a term. Meaningful markup for an
image and its caption should look something like the following:

    :::html
    <dl>
        <dt><img src="images/paris.jpg" alt="View from Notre Dame de Paris" /></dt>
        <dd>View from Notre Dame de Paris</dd>
    </dl>

Ideally, images appearing one after the other should belong to the same
definition list.

My aim was to achieve a result similar to Chris's [image title plugin demo][2]
simply by styling a definition list containing images and their captions. In
the end, I was forced to abandon the ideal of using a single definition list
for multiple images and captions: the nature of CSS positioning dictates that
each image–caption pair reside in its own element. The final markup, however,
is still quite clean:

    :::html
    <dl class="captioned-image">
        <dt><img src="images/paris.jpg" alt="View from Notre Dame de Paris" /></dt>
        <dd><span>View from Notre Dame de Paris</span></dd>
    </dl>

Additional markup required:

* Each definition list must have a class name of **captioned-image** applied
* Each caption must be wrapped in a span element (captions to appear on
  multiple lines require multiple span elements)

Check out the [captions over images demo][3] to see the approach in action. The
CSS responsible for the appearance of the captions is as follows:

    :::css
    dl.captioned-image         { position: relative; margin: 1em 0; }
    dl.captioned-image dt img  { display: block; }
    dl.captioned-image dd      { position: absolute; left: 0; bottom: 1.25em;
                                 font: bold 2em/1.25em Helvetica, sans-serif; }
    dl.captioned-image.top dd  { top: 1.25em; }
    dl.captioned-image dd span { display: block; float: left; clear: both;
                                 background: #000; background: rgba(0, 0, 0, 0.7);
                                 padding: 0.25em 0.5em; color: #fff; }

I set out to display captions over images without the use of JavaScript while
keeping meaningless markup to a minimum. **Have I succeeded, do you think?**


[1]: http://css-tricks.com/video-screencasts/67-jquery-part-3-image-title-plugin/
[2]: http://css-tricks.com/examples/TypeOverImagePlugin/
[3]: /examples/captions-over-images/
