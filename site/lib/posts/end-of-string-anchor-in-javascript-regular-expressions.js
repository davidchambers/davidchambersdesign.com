import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p([
    'JavaScript\'s regular expressions are less than awesome, sadly.\n        One limitation is the lack of start of string and end of string\n        anchors. In Perl, for example, ',
    code('\\A'),
    ' matches the start\n        of a string, ',
    code('\\Z'),
    ' the end.'
  ]),
  p([
    'Most of the time it\'s possible to get by with ',
    code('^'),
    ' and ',
    code('$'),
    ' which act like ',
    code('\\A'),
    ' and ',
    code('\\Z'),
    ' ',
    strong('except in multiline mode'),
    ' where they match the start\n        and end of any line.'
  ]),
  p(['It\'s possible, though, to have a lookahead act as an end of string\n        anchor in multiline mode:']),
  _code$002Dblock(Symbol.for('javascript'))('\n     > /bar(?![\\s\\S])/m.test(\'foo\\nbar\')\n     true\n     > /bar(?![\\s\\S])/m.test(\'foo\\nbar\\n\')\n     false\n     > /bar(?![\\s\\S])/m.test(\'foo\\nbar\\nbaz\')\n     false\n     '),
  p([
    code('(?![\\s\\S])'),
    ' at the end of the pattern is equivalent to ',
    code('\\Z'),
    '.'
  ]),
  h3('Start of string anchor?'),
  p([
    'Unfortunately, since JavaScript offers lookahead but not lookbehind,\n        this approach can\'t be used to simulate ',
    code('\\A'),
    '.'
  ])
];
export default {
  [Symbol.for('id')]: 86,
  [Symbol.for('slug')]: 'end-of-string-anchor-in-javascript-regular-expressions',
  [Symbol.for('title')]: 'End of string anchor in JavaScript regular expressions',
  [Symbol.for('datetime')]: datetime('2011-05-22')('18:30:00')(Symbol.for('America/Los_Angeles')),
  [Symbol.for('tags')]: [
    'javascript',
    'regex',
    'regular-expressions'
  ],
  [Symbol.for('body')]: body
};
