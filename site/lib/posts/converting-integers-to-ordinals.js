import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p([
    'When dealing with dates, it\'s not uncommon to need to convert an\n        integer into an ordinal number (1st, 2nd, 3rd, etc.). While making\n        improvements to ',
    a('http://mango.io/wtf?')('Mango'),
    ' recently I\n        wrote a function to do this, first in Python, later in JavaScript.'
  ]),
  h3('Python'),
  _code$002Dblock(Symbol.for('python'))('\n     def ordinal(n):\n         if 10 < n < 14: return u\'%sth\' % n\n         if n % 10 == 1: return u\'%sst\' % n\n         if n % 10 == 2: return u\'%snd\' % n\n         if n % 10 == 3: return u\'%srd\' % n\n         return u\'%sth\' % n\n     '),
  h3('JavaScript'),
  _code$002Dblock(Symbol.for('javascript'))('\n     function ordinal(n) {\n         if (10 < n && n < 14) return n + \'th\';\n         switch (n % 10) {\n             case 1: return n + \'st\';\n             case 2: return n + \'nd\';\n             case 3: return n + \'rd\';\n             default: return n + \'th\';\n         }\n     }\n     '),
  p(['By special-casing 11, 12, and 13, the function becomes incredibly\n        simple.']),
  p([
    'I\'m pleased to have found a context in which JavaScript\'s ',
    code('switch'),
    ' statement is almost ',
    em('elegant'),
    '.\n        The problem, usually, is the need to ',
    code('break'),
    '\n        to prevent fall-through. When used within a function,\n        though, the ',
    code('return'),
    ' statement is able to\n        perform this role, making the JavaScript code almost\n        as readable as the Python equivalent.'
  ])
];
export default {
  [Symbol.for('id')]: 70,
  [Symbol.for('slug')]: 'converting-integers-to-ordinals',
  [Symbol.for('title')]: 'Converting integers to ordinals',
  [Symbol.for('datetime')]: datetime('2010-09-16')('13:00:00')(Symbol.for('Pacific/Auckland')),
  [Symbol.for('tags')]: [
    'javascript',
    'programming',
    'python'
  ],
  [Symbol.for('body')]: body
};
