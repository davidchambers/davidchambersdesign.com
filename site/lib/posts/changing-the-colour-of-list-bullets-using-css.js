import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p(['So, you\'re about to style an unordered list of some sort...']),
  _code$002Dblock(Symbol.for('html'))('\n     <h1>TXJS 2011 Speakers</h1>\n     <ul>\n       <li>Brendan Eich</li>\n       <li>Alex Russell</li>\n       <li>Douglas Crockford</li>\n       <li>Paul Irish</li>\n     </ul>\n     '),
  p(['You\'ve decided upon hanging square bullets in a light grey \u2013\n        nothing too distracting...']),
  _code$002Dblock(Symbol.for('css'))('\n     ul {\n       list-style: square outside;\n       color: #ccc;\n     }\n     li {\n       color: #000;\n     }\n     '),
  p(['This should do the trick, but doesn\'t for some reason! How the heck\n        does one target the bullets and only the bullets? As far as I know\n        it\'s not possible.']),
  _h3$0027({ [Symbol.for('id')]: 'conventional-hack' })('Conventional hack'),
  _code$002Dblock(Symbol.for('html'))('\n     <h1>TXJS 2011 Speakers</h1>\n     <ul>\n       <li><span>Brendan Eich</span></li>\n       <li><span>Alex Russell</span></li>\n       <li><span>Douglas Crockford</span></li>\n       <li><span>Paul Irish</span></li>\n     </ul>\n\n     <style>\n       ul {\n         list-style: square outside;\n         color: #ccc;\n       }\n       li > span {\n         color: #000;\n       }\n     </style>\n     '),
  p([
    'This gets the job done, but those ',
    code('span'),
    's are ugly \u2013\n        there are ways to achieve the desired visual effect without\n        hacking the markup.'
  ]),
  _h3$0027({ [Symbol.for('id')]: 'background-image-technique' })('Background image technique'),
  _code$002Dblock(Symbol.for('css'))('\n     ul {\n       list-style: none;\n     }\n     li {\n       margin-left: -12px;\n       background: url(bullet.png) no-repeat 0;\n       text-indent: 12px;\n     }\n     '),
  p([
    'This requires very little CSS. To avoid incurring the overhead\n        of an extra HTTP request, one could Base64-encode the image in a ',
    a('http://en.wikipedia.org/wiki/Data_URI_scheme#CSS')('data URI'),
    '.'
  ]),
  _h3$0027({ [Symbol.for('id')]: 'pseudo-element-technique' })('Pseudo-element technique'),
  _code$002Dblock(Symbol.for('css'))('\n     ul {\n       list-style: none;\n     }\n     li {\n       position: relative;\n     }\n     li:before {\n       position: absolute;\n       top: 8px;\n       margin: 8px 0 0 -12px;\n         /* accommodate Camino */\n         vertical-align: middle;\n         display: inline-block;\n       width: 4px;\n       height: 4px;\n       background: #ccc;\n       content: "";\n     }\n     '),
  p(['So it\'s possible to fashion square bullets of any colour\n        with just a handful of straightforward declarations. Nice!']),
  p(['Prefer round bullets? No problem. :)']),
  _code$002Dblock(Symbol.for('css'))('\n     ...\n     -webkit-border-radius: 2px;\n     -moz-border-radius: 2px;\n     border-radius: 2px;\n     ...\n     ')
];
export default {
  [Symbol.for('id')]: 83,
  [Symbol.for('slug')]: 'changing-the-colour-of-list-bullets-using-css',
  [Symbol.for('title')]: 'Changing the colour of list bullets using CSS',
  [Symbol.for('datetime')]: datetime('2011-04-13')('17:30:00')(Symbol.for('America/Los_Angeles')),
  [Symbol.for('tags')]: [
    'css',
    'meaningful-markup'
  ],
  [Symbol.for('body')]: body
};
