import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p([
    'Today I noticed that a page on this site failed validation. ',
    a('http://validator.w3.org/')('W3C\'s markup validation service'),
    '\n        gave the following error:'
  ]),
  _code$002Dblock(Symbol.for('plain-text'))('\n     element "strike" undefined\n     '),
  p([
    code('<strike>'),
    ' is not valid XHTML; I\'d forgotten the correct\n        XHTML markup for this purpose:'
  ]),
  _code$002Dblock(Symbol.for('html'))('\n     my favourite colour is <del>red</del> <ins>white</ins>\n     '),
  p([
    'The above gives:\n        my favourite colour is ',
    del('red'),
    ' ',
    ins('white')
  ]),
  p(['It\'s a good idea to explicitly define the appearance of deleted\n        and inserted text in your style sheet:']),
  _code$002Dblock(Symbol.for('css'))('\n     del { text-decoration: line-through; }\n     ins { text-decoration: underline; }\n     ')
];
export default {
  [Symbol.for('id')]: 8,
  [Symbol.for('slug')]: 'valid-xhtml-alternative-to-strike',
  [Symbol.for('title')]: [
    'Valid XHTML alternative to ',
    code('<strike>')
  ],
  [Symbol.for('datetime')]: datetime('2009-03-17')('21:53:00')(Symbol.for('Pacific/Auckland')),
  [Symbol.for('tags')]: [
    'css',
    'html'
  ],
  [Symbol.for('body')]: body
};
