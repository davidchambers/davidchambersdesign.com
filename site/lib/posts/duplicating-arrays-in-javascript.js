import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p([
    'Many of those who write JavaScript do not come from programming\n        backgrounds (while I\'ve written plenty of PHP, Python, and\n        JavaScript, I don\'t have much experience with "real" programming\n        languages',
    a('#footnote')('*'),
    '). As a result, a significant\n        portion of JavaScript coders do not think of variables as pointers\n        to memory addresses. This leads to confusion in cases such as this:'
  ]),
  _code$002Dblock(Symbol.for('javascript'))('\n     var fruits = [\'orange\', \'lime\'];\n     var colours = fruits; // na√Øve attempt to duplicate array\n     colours.push(\'yellow\');\n     '),
  p([
    'One might be surprised to learn that ',
    code('fruits'),
    ' now contains\n        not just "orange" and "lime" but also "yellow". Oops! Here\'s how\n        it went wrong:'
  ]),
  _code$002Dblock(Symbol.for('javascript'))('\n     var fruits = [\'orange\', \'lime\'];\n     // fruits points to array containing "orange" and "lime"\n\n     var colours = fruits;\n     // colours now points to that same array!\n     '),
  p([
    'How, then, does one create a copy of the original array? ',
    em('Slice!')
  ]),
  _code$002Dblock(Symbol.for('javascript'))('\n     var colours = fruits.slice();\n     '),
  _aside$0027({ [Symbol.for('id')]: 'footnote' })([
    '* Languages such as C.\n        Like ',
    a('http://www.quirksmode.org/about/')('ppk'),
    ',\n        I take care to include quotation marks. ;)'
  ])
];
export default {
  [Symbol.for('id')]: 35,
  [Symbol.for('slug')]: 'duplicating-arrays-in-javascript',
  [Symbol.for('title')]: 'Duplicating arrays in JavaScript',
  [Symbol.for('datetime')]: datetime('2010-01-09')('19:26:00')(Symbol.for('Pacific/Auckland')),
  [Symbol.for('tags')]: ['javascript'],
  [Symbol.for('body')]: body
};
