import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p([
    'When writing code one often needs to grab the first item in\n        a collection that has certain characteristics. For example,\n        one may have a list of ',
    code('Student'),
    ' objects and need\n        to fetch the one with a certain id.'
  ]),
  p(['The task is trivial: loop through the list and compare each\n        student\'s id until a match is found or all the students in\n        the list have been inspected, whichever comes first.']),
  p(['In the past, I\'ve tended to take advantage of return statements\n        to exit the loop as soon as a match is found. The examples here\n        are in Python, but the same patterns apply to other languages.']),
  _code$002Dblock(Symbol.for('python'))('\n     def student_by_id(students, id):\n         for student in students:\n             if student.id == id:\n                 return student\n         return None\n     '),
  p(['This appoach strikes me as inelegant when the function is called\n        in one place only. Today a different approached occurred to me.']),
  _code$002Dblock(Symbol.for('python'))('\n     student = None\n     for student in students:\n         if student.id == id:\n             break\n         student = None\n     '),
  p([
    'Here, we break out of the loop as soon as a match\n        is found, preserving the student of interest in the\n        variable ',
    code('student'),
    '. Each time through the\n        loop ',
    code('student'),
    ' is cleared to ensure that ',
    code('student'),
    ' is empty once we\'ve finished looping\n        if there are no matches.'
  ]),
  p(['The first line is required to handle empty lists.']),
  p(['I think I\'ll use this approach from time to time.\n        Let me know if you\'re aware of another option.'])
];
export default {
  [Symbol.for('id')]: 54,
  [Symbol.for('slug')]: 'first-matching-item',
  [Symbol.for('title')]: 'First matching item',
  [Symbol.for('datetime')]: datetime('2010-06-17')('23:17:00')(Symbol.for('Pacific/Auckland')),
  [Symbol.for('tags')]: ['programming'],
  [Symbol.for('body')]: body
};
