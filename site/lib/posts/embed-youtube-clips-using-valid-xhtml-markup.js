import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from '../elements.js';
import { _code$002Dblock } from '../components.js';
import datetime from '../datetime.js';
const body = [
  p(['There are blog posts all over the Web explaining how to\n        write valid XHTML markup to embed YouTube videos. There\n        are also a number of online converters that generate this\n        markup automatically.']),
  p([
    'I\'ve always found it easier to write the markup myself, as\n        there\'s really nothing to it. Simply replace both instances\n        of ',
    code('video_id'),
    ' in the following code with -- you\n        guessed it -- the video\'s ID.'
  ]),
  _code$002Dblock(Symbol.for('html'))('\n     <object class="youtube"\n             type="application/x-shockwave-flash"\n             data="http://www.youtube.com/v/video_id&hl=en&fs=1&rel=0">\n         <param name="movie" value="http://www.youtube.com/v/video_id&hl=en&fs=1&rel=0" />\n         <param name="allowFullScreen" value="true" />\n     </object>\n     '),
  p([
    code('rel=0'),
    ' is often useful to include (as I\'ve done\n        in the example above) as it prevents thumbnails for related\n        videos from being displayed at the end of the clip.'
  ]),
  p([
    'One important point to remember when you\'re "rolling your own"\n        markup is that the character entity ',
    code('&amp;'),
    ' must be\n        used for all ampersands.'
  ]),
  p([
    'Finally, be aware of the fact that it\'s possible to change the size\n        of the YouTube object using CSS. There\'s no need to include the ',
    code('width'),
    ' and ',
    code('height'),
    ' attributes in the markup.'
  ]),
  _code$002Dblock(Symbol.for('css'))('\n     object.youtube\n     {\n         width: 100%;\n         height: 385px;\n     }\n     ')
];
export default {
  [Symbol.for('id')]: 25,
  [Symbol.for('slug')]: 'embed-youtube-clips-using-valid-xhtml-markup',
  [Symbol.for('title')]: 'Embed YouTube clips using valid XHTML markup',
  [Symbol.for('datetime')]: datetime('2009-09-14')('14:17:00')(Symbol.for('Pacific/Auckland')),
  [Symbol.for('tags')]: [
    'css',
    'html',
    'video'
  ],
  [Symbol.for('body')]: body
};
