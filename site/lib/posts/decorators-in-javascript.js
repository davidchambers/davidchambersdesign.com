import {p, em} from "../elements.js";
import {code$002Dblock, $2014} from "../components.js";
import datetime from "../datetime.js";
const body = [p(["A decorator is a function which takes a function and returns a function:"]), code$002Dblock("coffeescript")("decorator = (fn) -> fn\n  "), p(["Obviously, this doesn't do anything useful. It's the fact that a ", "decorator can return a function which behaves ", em(["similarly"]), " ", "to the function passed to it that makes the pattern interesting. ", "Commonly a decorator will simply wrap a function invocation in a ", "check of some sort:"]), code$002Dblock("javascript")("var loginRequired = function (fn) {\n  return function () {\n    if (!user.authenticated) {\n      return window.location.replace('/login');\n    }\n    fn.apply(null, [].slice.apply(arguments));\n  };\n};\n  "), p(["The above decorator could be used to \"guard\" actions that only ", "authenticated users are permitted to perform:"]), code$002Dblock("javascript")("var changeUsername = loginRequired(function (username) {\n  $.ajax({\n    type: 'PUT',\n    url: '/api/1.0/users/' + user.id,\n    data: {username: username}\n  })});\n\nvar changePassword = loginRequired(function (password) {\n  $.ajax({\n    type: 'PUT',\n    url: '/api/1.0/users/' + user.id,\n    data: {password: password}\n  })});\n\nvar deleteAccount = loginRequired(function () {\n  $.ajax({\n    type: 'DELETE',\n    url: '/api/1.0/users/' + user.id\n  })});\n  "), p(["The CoffeeScript equivalent is quite a bit clearer:"]), code$002Dblock("coffeescript")("changeUsername = loginRequired (username) ->\n  $.ajax\n    type: 'PUT'\n    url: \"/api/1.0/users/#{user.id}\"\n    data: {username}\n\nchangePassword = loginRequired (password) ->\n  $.ajax\n    type: 'PUT'\n    url: \"/api/1.0/users/#{user.id}\"\n    data: {password}\n\ndeleteAccount = loginRequired ->\n  $.ajax\n    type: 'DELETE'\n    url: \"/api/1.0/users/#{user.id}\"\n  "), p(["Decorators are commonly used in Python", $2014, "which provides ", "special syntax for \"decorating\" functions", $2014, "but are rarely ", "seen in JavaScript code. This despite the fact that JavaScript's ", "first-class functions are ideally suited to the task. Perhaps ", "CoffeeScript's lighter-weight function syntax will result in ", "decorators making more frequent appearances in JavaScript code."])];
export default {
  id: 89,
  slug: "decorators-in-javascript",
  title: ["Decorators in JavaScript"],
  datetime: datetime("2011-07-26 22:00:00 (America/Los_Angeles)"),
  tags: ["coffeescript", "javascript", "programming"],
  body
};
