import {
  _canonicalize$002Dchildren,
  text,
  excerpt,
  a,
  _a$0027,
  article,
  _article$0027,
  aside,
  _aside$0027,
  b,
  blockquote,
  _blockquote$0027,
  body,
  _body$0027,
  code,
  _code$0027,
  dd,
  _dd$0027,
  del,
  _del$0027,
  div,
  dl,
  _dl$0027,
  dt,
  _dt$0027,
  em,
  _em$0027,
  embed,
  footer,
  _footer$0027,
  h1,
  _h1$0027,
  h2,
  _h2$0027,
  h3,
  _h3$0027,
  h4,
  _h4$0027,
  h5,
  _h5$0027,
  h6,
  _h6$0027,
  head,
  _head$0027,
  header,
  _header$0027,
  hr,
  _hr$0027,
  html,
  _html$0027,
  i,
  _i$0027,
  img,
  ins,
  _ins$0027,
  li,
  _li$0027,
  linearGradient,
  link,
  mask,
  meta,
  nav,
  _nav$0027,
  object,
  ol,
  _ol$0027,
  p,
  _p$0027,
  param,
  path,
  pre,
  _pre$0027,
  rect,
  script,
  span,
  stop,
  strong,
  _strong$0027,
  svg,
  time,
  title,
  _title$0027,
  ul,
  _ul$0027,
  _var,
  _var$0027,
  video
} from './elements.js';
import s from './sanctuary.js';
const _render$002Dsection = function _render$002Dsection(section) {
  return li([
    h2(section[Symbol.for('heading')]),
    ol(s[Symbol.for('map')](post => li([
      _a$0027({ [Symbol.for('href')]: '/' + post[Symbol.for('slug')] })(post[Symbol.for('title')]),
      ' ',
      time({ [Symbol.for('datetime')]: post[Symbol.for('datetime')]['toISO']() })(post[Symbol.for('datetime')]['toFormat']('d MMMM y | h:mm') + post[Symbol.for('datetime')]['toFormat']('a')['toLowerCase']())
    ]))(section[Symbol.for('posts')]))
  ]);
};
const _render$002Darchives = s[Symbol.for('pipe')]([
  s[Symbol.for('map')](s[Symbol.for('join')](s[Symbol.for('Pair')])),
  s[Symbol.for('map')](s[Symbol.for('map-left')](post => post[Symbol.for('datetime')])),
  s[Symbol.for('sort-by')](s[Symbol.for('compose')](s[Symbol.for('compose')](s[Symbol.for('negate')])(Number))(s[Symbol.for('fst')])),
  s[Symbol.for('map')](s[Symbol.for('map-left')](datetime => datetime['toFormat']('MMMM y'))),
  s[Symbol.for('group-by')](s[Symbol.for('on')](s[Symbol.for('equals')])(s[Symbol.for('fst')])),
  s[Symbol.for('chain')](s[Symbol.for('array')]([])(head => tail => [{
      [Symbol.for('heading')]: s[Symbol.for('fst')](head),
      [Symbol.for('posts')]: s[Symbol.for('map')](s[Symbol.for('snd')])(s[Symbol.for('prepend')](head)(tail))
    }])),
  sections => [
    h1('Archives'),
    _ol$0027({ [Symbol.for('class')]: 'archives' })(s[Symbol.for('map')](_render$002Dsection)(sections))
  ]
]);
export default _render$002Darchives;
