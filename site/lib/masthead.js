import { path } from './elements.js';
import {
  render,
  _$21E6,
  _$21E8,
  _$21E7,
  _$21E9,
  _$2190,
  _$2192,
  _$2191,
  _$2193
} from './orthogonal.js';
import s from './sanctuary.js';
const _$003CA$003E = [
  _$2192(14),
  _$2193(24),
  _$2190(4),
  _$2191(10),
  _$2190(6),
  _$2193(10),
  _$2190(4),
  _$2191(24),
  _$21E8(4),
  _$21E9(4),
  _$2192(6),
  _$2193(6),
  _$2190(6),
  _$2191(6)
];
const _$003CB$003E = [
  _$2192(14),
  _$2193(24),
  _$2190(14),
  _$2191(24),
  _$21E8(4),
  _$21E9(4),
  _$2192(6),
  _$2193(6),
  _$2190(6),
  _$2191(6),
  _$21E8(0),
  _$21E9(10),
  _$2192(6),
  _$2193(6),
  _$2190(6),
  _$2191(6)
];
const _$003CC$003E = [
  _$2192(14),
  _$2193(9),
  _$2190(4),
  _$2191(5),
  _$2190(6),
  _$2193(16),
  _$2192(6),
  _$2191(5),
  _$2192(4),
  _$2193(9),
  _$2190(14),
  _$2191(24)
];
const _$003CD$003E = [
  _$2192(14),
  _$2193(24),
  _$2190(14),
  _$2191(24),
  _$21E8(4),
  _$21E9(4),
  _$2192(6),
  _$2193(16),
  _$2190(6),
  _$2191(16)
];
const _$003CE$003E = [
  _$2192(12),
  _$2193(4),
  _$2190(8),
  _$2193(6),
  _$2192(8),
  _$2193(4),
  _$2190(8),
  _$2193(6),
  _$2192(8),
  _$2193(4),
  _$2190(12),
  _$2191(24)
];
const _$003CG$003E = [
  _$2192(14),
  _$2193(4),
  _$2190(10),
  _$2193(16),
  _$2192(6),
  _$2191(10),
  _$2192(4),
  _$2193(14),
  _$2190(14),
  _$2191(24)
];
const _$003CH$003E = [
  _$2192(4),
  _$2193(10),
  _$2192(6),
  _$2191(10),
  _$2192(4),
  _$2193(24),
  _$2190(4),
  _$2191(10),
  _$2190(6),
  _$2193(10),
  _$2190(4),
  _$2191(24)
];
const _$003CI$003E = [
  _$2192(4),
  _$2193(24),
  _$2190(4),
  _$2191(24)
];
const _$003CM$003E = [
  _$2192(22),
  _$2193(24),
  _$2190(4),
  _$2191(20),
  _$2190(5),
  _$2193(20),
  _$2190(4),
  _$2191(20),
  _$2190(5),
  _$2193(20),
  _$2190(4),
  _$2191(24)
];
const _$003CN$003E = [
  _$2192(14),
  _$2193(24),
  _$2190(4),
  _$2191(20),
  _$2190(6),
  _$2193(20),
  _$2190(4),
  _$2191(24)
];
const _$003CR$003E = _$003CA$003E;
const _$003CS$003E = [
  _$2192(12),
  _$2193(4),
  _$2190(8),
  _$2193(6),
  _$2192(8),
  _$2193(14),
  _$2190(12),
  _$2191(4),
  _$2192(8),
  _$2191(6),
  _$2190(8),
  _$2191(14)
];
const _$003CV$003E = [
  _$2192(4),
  _$2193(20),
  _$2192(6),
  _$2191(20),
  _$2192(4),
  _$2193(24),
  _$2190(14),
  _$2191(24)
];
const _$002DA$002D = [
  _$2192(14),
  _$2193(1),
  _$2190(13),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(10),
  _$2192(6),
  _$2191(6),
  _$2192(1),
  _$2193(7),
  _$2190(7),
  _$2191(1),
  _$21E8(6),
  _$21E9(4),
  _$2192(1),
  _$2193(10),
  _$2190(1),
  _$2191(10)
];
const _$002DB$002D = [
  _$2192(14),
  _$2193(1),
  _$2190(13),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(10),
  _$2192(6),
  _$2191(6),
  _$2192(1),
  _$2193(7),
  _$2190(7),
  _$2191(1),
  _$21E8(0),
  _$21E9(10),
  _$2192(6),
  _$2191(6),
  _$2192(1),
  _$2193(7),
  _$2190(7),
  _$2191(1)
];
const _$002DC$002D = [
  _$2192(14),
  _$2193(1),
  _$2190(13),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(20),
  _$2192(6),
  _$2191(5),
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(5),
  _$2190(7),
  _$2191(1),
  _$21E8(6),
  _$21E7(16),
  _$2192(1),
  _$2193(5),
  _$2190(1),
  _$2191(5)
];
const _$002DD$002D = [
  _$2192(14),
  _$2193(1),
  _$2190(13),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(20),
  _$2192(6),
  _$2191(16),
  _$2192(1),
  _$2193(17),
  _$2190(7),
  _$2191(1)
];
const _$002DE$002D = [
  _$2192(12),
  _$2193(1),
  _$2190(11),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(10),
  _$2192(8),
  _$2193(1),
  _$2190(8),
  _$2191(1),
  _$21E8(0),
  _$21E9(10),
  _$2192(8),
  _$2193(1),
  _$2190(8),
  _$2191(1)
];
const _$002DG$002D = [
  _$2192(14),
  _$2193(1),
  _$2190(13),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(20),
  _$2192(6),
  _$2191(10),
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(10),
  _$2190(7),
  _$2191(1)
];
const _$002DH$002D = [
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(10),
  _$2192(6),
  _$2191(10),
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(10),
  _$2190(7),
  _$2191(1),
  _$21E8(6),
  _$21E9(4),
  _$2192(1),
  _$2193(10),
  _$2190(1),
  _$2191(10)
];
const _$002DI$002D = [
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(23),
  _$2190(1),
  _$2191(24)
];
const _$002DM$002D = [
  _$2192(22),
  _$2193(1),
  _$2190(21),
  _$2193(23),
  _$2190(1),
  _$2191(23),
  _$21E8(9),
  _$21E9(3),
  _$2192(1),
  _$2193(20),
  _$2190(1),
  _$2191(20),
  _$21E8(9),
  _$21E9(0),
  _$2192(1),
  _$2193(20),
  _$2190(1),
  _$2191(20)
];
const _$002DN$002D = [
  _$2192(14),
  _$2193(1),
  _$2190(13),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(10),
  _$21E9(4),
  _$2192(1),
  _$2193(20),
  _$2190(1),
  _$2191(20)
];
const _$002DR$002D = _$002DA$002D;
const _$002DS$002D = [
  _$2192(12),
  _$2193(1),
  _$2190(11),
  _$2193(13),
  _$2190(1),
  _$2191(14),
  _$21E8(0),
  _$21E9(20),
  _$2192(8),
  _$2191(6),
  _$2192(1),
  _$2193(7),
  _$2190(8),
  _$2193(3),
  _$2190(1),
  _$2191(4),
  _$21E8(4),
  _$21E7(10),
  _$2192(8),
  _$2193(1),
  _$2190(8),
  _$2191(1)
];
const _$002DV$002D = [
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(23),
  _$2190(1),
  _$2191(24),
  _$21E8(4),
  _$21E9(20),
  _$2192(6),
  _$2191(20),
  _$2192(4),
  _$2193(1),
  _$2190(3),
  _$2193(20),
  _$2190(7),
  _$2191(1)
];
const _$007EA$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(2),
  _$2191(10),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(10),
  _$2190(3),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(7),
  _$2190(1),
  _$2191(8),
  _$21E8(8),
  _$21E9(20),
  _$2192(2),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(3),
  _$2191(1)
];
const _$007EB$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(12),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(13),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(7),
  _$2190(1),
  _$2191(8),
  _$21E8(0),
  _$21E9(10),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(7),
  _$2190(1),
  _$2191(8)
];
const _$007EC$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(12),
  _$2191(7),
  _$2192(1),
  _$2193(8),
  _$2190(13),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(17),
  _$2190(1),
  _$2191(18),
  _$21E8(10),
  _$21E7(2),
  _$2192(1),
  _$2193(8),
  _$2190(3),
  _$2191(1),
  _$2192(2),
  _$2191(7)
];
const _$007ED$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(12),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(13),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(17),
  _$2190(1),
  _$2191(18)
];
const _$007EE$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(10),
  _$2191(2),
  _$2192(1),
  _$2193(3),
  _$2190(11),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(8),
  _$2191(2),
  _$2192(1),
  _$2193(3),
  _$2190(8),
  _$2193(7),
  _$2190(1),
  _$2191(8),
  _$21E8(0),
  _$21E9(10),
  _$2192(8),
  _$2191(2),
  _$2192(1),
  _$2193(3),
  _$2190(8),
  _$2193(7),
  _$2190(1),
  _$2191(8)
];
const _$007EG$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(12),
  _$2191(12),
  _$2192(1),
  _$2193(13),
  _$2190(13),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(10),
  _$2191(2),
  _$2192(1),
  _$2193(3),
  _$2190(10),
  _$2193(17),
  _$2190(1),
  _$2191(18)
];
const _$007EH$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(2),
  _$2191(10),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(10),
  _$2190(3),
  _$2191(1),
  _$21E8(2),
  _$21E7(22),
  _$2192(1),
  _$2193(10),
  _$2190(1),
  _$2191(10),
  _$21E8(10),
  _$21E9(0),
  _$2192(1),
  _$2193(23),
  _$2190(3),
  _$2191(1),
  _$2192(2),
  _$2191(22)
];
const _$007EI$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(2),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(3),
  _$2191(1)
];
const _$007EM$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(2),
  _$2191(20),
  _$2192(7),
  _$2193(1),
  _$2190(6),
  _$2193(20),
  _$2190(3),
  _$2191(1),
  _$21E8(9),
  _$21E9(0),
  _$2192(2),
  _$2191(20),
  _$2192(7),
  _$2193(1),
  _$2190(6),
  _$2193(20),
  _$2190(3),
  _$2191(1),
  _$21E8(9),
  _$21E9(0),
  _$2192(2),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(3),
  _$2191(1)
];
const _$007EN$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(2),
  _$2191(20),
  _$2192(8),
  _$2193(1),
  _$2190(7),
  _$2193(20),
  _$2190(3),
  _$2191(1),
  _$21E8(10),
  _$21E9(0),
  _$2192(2),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(3),
  _$2191(1)
];
const _$007ER$007E = _$007EA$007E;
const _$007ES$007E = [
  _$21E8(1),
  _$21E9(13),
  _$2192(8),
  _$2193(1),
  _$2190(8),
  _$2191(1),
  _$21E8(0),
  _$21E9(10),
  _$2192(10),
  _$2191(12),
  _$2192(1),
  _$2193(13),
  _$2190(11),
  _$2191(1),
  _$21E8(2),
  _$21E7(20),
  _$2192(8),
  _$2191(2),
  _$2192(1),
  _$2193(3),
  _$2190(8),
  _$2193(7),
  _$2190(1),
  _$2191(8)
];
const _$007EV$007E = [
  _$21E8(1),
  _$21E9(23),
  _$2192(12),
  _$2191(22),
  _$2192(1),
  _$2193(23),
  _$2190(13),
  _$2191(1),
  _$21E8(2),
  _$21E7(22),
  _$2192(1),
  _$2193(20),
  _$2190(1),
  _$2191(20)
];
const update = function update(positions) {
  return dir => (() => {
    const x = s[Symbol.for('fst')](positions[0]);
    const y = s[Symbol.for('snd')](positions[0]);
    return [
      dir[0] === Symbol.for('h') ? s[Symbol.for('Pair')](x + dir[1])(y) : dir[0] === Symbol.for('v') ? s[Symbol.for('Pair')](x)(y + dir[1]) : s[Symbol.for('Pair')](x + dir[1][0])(y + dir[1][1]),
      ...positions
    ];
  })();
};
const reset = function reset(path) {
  return (() => {
    const paths = s[Symbol.for('extend')](s[Symbol.for('I')])(s[Symbol.for('reduce')](update)([s[Symbol.for('Pair')](0)(0)])(path));
    const xs = s[Symbol.for('chain')](s[Symbol.for('map')](s[Symbol.for('fst')]))(paths);
    const ys = s[Symbol.for('chain')](s[Symbol.for('map')](s[Symbol.for('snd')]))(paths);
    const dx = s[Symbol.for('reduce')](s[Symbol.for('max')])(0)(xs) - xs[0];
    const dy = 0 - ys[0];
    return [
      Symbol.for('m'),
      [
        dx,
        dy
      ]
    ];
  })();
};
const paths = s[Symbol.for('pipe')]([
  s[Symbol.for('map')](char => [
    ...char,
    reset(char)
  ]),
  s[Symbol.for('intercalate')]([[
      Symbol.for('m'),
      [
        6,
        0
      ]
    ]]),
  s[Symbol.for('prepend')]([
    Symbol.for('M'),
    [
      0,
      0
    ]
  ])
]);
const _$003Cchars$003E = paths([
  _$003CD$003E,
  _$003CA$003E,
  _$003CV$003E,
  _$003CI$003E,
  _$003CD$003E,
  _$003CC$003E,
  _$003CH$003E,
  _$003CA$003E,
  _$003CM$003E,
  _$003CB$003E,
  _$003CE$003E,
  _$003CR$003E,
  _$003CS$003E,
  _$003CD$003E,
  _$003CE$003E,
  _$003CS$003E,
  _$003CI$003E,
  _$003CG$003E,
  _$003CN$003E
]);
const _$002Dchars$002D = paths([
  _$002DD$002D,
  _$002DA$002D,
  _$002DV$002D,
  _$002DI$002D,
  _$002DD$002D,
  _$002DC$002D,
  _$002DH$002D,
  _$002DA$002D,
  _$002DM$002D,
  _$002DB$002D,
  _$002DE$002D,
  _$002DR$002D,
  _$002DS$002D,
  _$002DD$002D,
  _$002DE$002D,
  _$002DS$002D,
  _$002DI$002D,
  _$002DG$002D,
  _$002DN$002D
]);
const _$007Echars$007E = paths([
  _$007ED$007E,
  _$007EA$007E,
  _$007EV$007E,
  _$007EI$007E,
  _$007ED$007E,
  _$007EC$007E,
  _$007EH$007E,
  _$007EA$007E,
  _$007EM$007E,
  _$007EB$007E,
  _$007EE$007E,
  _$007ER$007E,
  _$007ES$007E,
  _$007ED$007E,
  _$007EE$007E,
  _$007ES$007E,
  _$007EI$007E,
  _$007EG$007E,
  _$007EN$007E
]);
const mask = [path({
    [Symbol.for('d')]: render(_$003Cchars$003E),
    [Symbol.for('fill')]: '#000',
    [Symbol.for('fill-rule')]: Symbol.for('evenodd')
  })];
const fill = [
  path({
    [Symbol.for('d')]: render(_$002Dchars$002D),
    [Symbol.for('fill')]: '#999'
  }),
  path({
    [Symbol.for('d')]: render(_$007Echars$007E),
    [Symbol.for('fill')]: '#666'
  })
];
const _default = {
  [Symbol.for('mask')]: mask,
  [Symbol.for('fill')]: fill
};
export default _default;
export {
  fill,
  mask
};
