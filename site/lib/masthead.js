import S from 'sanctuary';
import { path } from './elements.js';
import {
  render,
  $21E6,
  $21E8,
  $21E7,
  $21E9,
  $2190,
  $2192,
  $2191,
  $2193
} from './orthogonal.js';
const $003CA$003E = [
  $2192(14),
  $2193(24),
  $2190(4),
  $2191(10),
  $2190(6),
  $2193(10),
  $2190(4),
  $2191(24),
  $21E8(4),
  $21E9(4),
  $2192(6),
  $2193(6),
  $2190(6),
  $2191(6)
];
const $003CB$003E = [
  $2192(14),
  $2193(24),
  $2190(14),
  $2191(24),
  $21E8(4),
  $21E9(4),
  $2192(6),
  $2193(6),
  $2190(6),
  $2191(6),
  $21E8(0),
  $21E9(10),
  $2192(6),
  $2193(6),
  $2190(6),
  $2191(6)
];
const $003CC$003E = [
  $2192(14),
  $2193(9),
  $2190(4),
  $2191(5),
  $2190(6),
  $2193(16),
  $2192(6),
  $2191(5),
  $2192(4),
  $2193(9),
  $2190(14),
  $2191(24)
];
const $003CD$003E = [
  $2192(14),
  $2193(24),
  $2190(14),
  $2191(24),
  $21E8(4),
  $21E9(4),
  $2192(6),
  $2193(16),
  $2190(6),
  $2191(16)
];
const $003CE$003E = [
  $2192(12),
  $2193(4),
  $2190(8),
  $2193(6),
  $2192(8),
  $2193(4),
  $2190(8),
  $2193(6),
  $2192(8),
  $2193(4),
  $2190(12),
  $2191(24)
];
const $003CG$003E = [
  $2192(14),
  $2193(4),
  $2190(10),
  $2193(16),
  $2192(6),
  $2191(10),
  $2192(4),
  $2193(14),
  $2190(14),
  $2191(24)
];
const $003CH$003E = [
  $2192(4),
  $2193(10),
  $2192(6),
  $2191(10),
  $2192(4),
  $2193(24),
  $2190(4),
  $2191(10),
  $2190(6),
  $2193(10),
  $2190(4),
  $2191(24)
];
const $003CI$003E = [
  $2192(4),
  $2193(24),
  $2190(4),
  $2191(24)
];
const $003CM$003E = [
  $2192(22),
  $2193(24),
  $2190(4),
  $2191(20),
  $2190(5),
  $2193(20),
  $2190(4),
  $2191(20),
  $2190(5),
  $2193(20),
  $2190(4),
  $2191(24)
];
const $003CN$003E = [
  $2192(14),
  $2193(24),
  $2190(4),
  $2191(20),
  $2190(6),
  $2193(20),
  $2190(4),
  $2191(24)
];
const $003CR$003E = $003CA$003E;
const $003CS$003E = [
  $2192(12),
  $2193(4),
  $2190(8),
  $2193(6),
  $2192(8),
  $2193(14),
  $2190(12),
  $2191(4),
  $2192(8),
  $2191(6),
  $2190(8),
  $2191(14)
];
const $003CV$003E = [
  $2192(4),
  $2193(20),
  $2192(6),
  $2191(20),
  $2192(4),
  $2193(24),
  $2190(14),
  $2191(24)
];
const $002DA$002D = [
  $2192(14),
  $2193(1),
  $2190(13),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(10),
  $2192(6),
  $2191(6),
  $2192(1),
  $2193(7),
  $2190(7),
  $2191(1),
  $21E8(6),
  $21E9(4),
  $2192(1),
  $2193(10),
  $2190(1),
  $2191(10)
];
const $002DB$002D = [
  $2192(14),
  $2193(1),
  $2190(13),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(10),
  $2192(6),
  $2191(6),
  $2192(1),
  $2193(7),
  $2190(7),
  $2191(1),
  $21E8(0),
  $21E9(10),
  $2192(6),
  $2191(6),
  $2192(1),
  $2193(7),
  $2190(7),
  $2191(1)
];
const $002DC$002D = [
  $2192(14),
  $2193(1),
  $2190(13),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(20),
  $2192(6),
  $2191(5),
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(5),
  $2190(7),
  $2191(1),
  $21E8(6),
  $21E7(16),
  $2192(1),
  $2193(5),
  $2190(1),
  $2191(5)
];
const $002DD$002D = [
  $2192(14),
  $2193(1),
  $2190(13),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(20),
  $2192(6),
  $2191(16),
  $2192(1),
  $2193(17),
  $2190(7),
  $2191(1)
];
const $002DE$002D = [
  $2192(12),
  $2193(1),
  $2190(11),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(10),
  $2192(8),
  $2193(1),
  $2190(8),
  $2191(1),
  $21E8(0),
  $21E9(10),
  $2192(8),
  $2193(1),
  $2190(8),
  $2191(1)
];
const $002DG$002D = [
  $2192(14),
  $2193(1),
  $2190(13),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(20),
  $2192(6),
  $2191(10),
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(10),
  $2190(7),
  $2191(1)
];
const $002DH$002D = [
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(10),
  $2192(6),
  $2191(10),
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(10),
  $2190(7),
  $2191(1),
  $21E8(6),
  $21E9(4),
  $2192(1),
  $2193(10),
  $2190(1),
  $2191(10)
];
const $002DI$002D = [
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(23),
  $2190(1),
  $2191(24)
];
const $002DM$002D = [
  $2192(22),
  $2193(1),
  $2190(21),
  $2193(23),
  $2190(1),
  $2191(23),
  $21E8(9),
  $21E9(3),
  $2192(1),
  $2193(20),
  $2190(1),
  $2191(20),
  $21E8(9),
  $21E9(0),
  $2192(1),
  $2193(20),
  $2190(1),
  $2191(20)
];
const $002DN$002D = [
  $2192(14),
  $2193(1),
  $2190(13),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(10),
  $21E9(4),
  $2192(1),
  $2193(20),
  $2190(1),
  $2191(20)
];
const $002DR$002D = $002DA$002D;
const $002DS$002D = [
  $2192(12),
  $2193(1),
  $2190(11),
  $2193(13),
  $2190(1),
  $2191(14),
  $21E8(0),
  $21E9(20),
  $2192(8),
  $2191(6),
  $2192(1),
  $2193(7),
  $2190(8),
  $2193(3),
  $2190(1),
  $2191(4),
  $21E8(4),
  $21E7(10),
  $2192(8),
  $2193(1),
  $2190(8),
  $2191(1)
];
const $002DV$002D = [
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(23),
  $2190(1),
  $2191(24),
  $21E8(4),
  $21E9(20),
  $2192(6),
  $2191(20),
  $2192(4),
  $2193(1),
  $2190(3),
  $2193(20),
  $2190(7),
  $2191(1)
];
const $007EA$007E = [
  $21E8(1),
  $21E9(23),
  $2192(2),
  $2191(10),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(10),
  $2190(3),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(7),
  $2190(1),
  $2191(8),
  $21E8(8),
  $21E9(20),
  $2192(2),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(3),
  $2191(1)
];
const $007EB$007E = [
  $21E8(1),
  $21E9(23),
  $2192(12),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(13),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(7),
  $2190(1),
  $2191(8),
  $21E8(0),
  $21E9(10),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(7),
  $2190(1),
  $2191(8)
];
const $007EC$007E = [
  $21E8(1),
  $21E9(23),
  $2192(12),
  $2191(7),
  $2192(1),
  $2193(8),
  $2190(13),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(17),
  $2190(1),
  $2191(18),
  $21E8(10),
  $21E7(2),
  $2192(1),
  $2193(8),
  $2190(3),
  $2191(1),
  $2192(2),
  $2191(7)
];
const $007ED$007E = [
  $21E8(1),
  $21E9(23),
  $2192(12),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(13),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(17),
  $2190(1),
  $2191(18)
];
const $007EE$007E = [
  $21E8(1),
  $21E9(23),
  $2192(10),
  $2191(2),
  $2192(1),
  $2193(3),
  $2190(11),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(8),
  $2191(2),
  $2192(1),
  $2193(3),
  $2190(8),
  $2193(7),
  $2190(1),
  $2191(8),
  $21E8(0),
  $21E9(10),
  $2192(8),
  $2191(2),
  $2192(1),
  $2193(3),
  $2190(8),
  $2193(7),
  $2190(1),
  $2191(8)
];
const $007EG$007E = [
  $21E8(1),
  $21E9(23),
  $2192(12),
  $2191(12),
  $2192(1),
  $2193(13),
  $2190(13),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(10),
  $2191(2),
  $2192(1),
  $2193(3),
  $2190(10),
  $2193(17),
  $2190(1),
  $2191(18)
];
const $007EH$007E = [
  $21E8(1),
  $21E9(23),
  $2192(2),
  $2191(10),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(10),
  $2190(3),
  $2191(1),
  $21E8(2),
  $21E7(22),
  $2192(1),
  $2193(10),
  $2190(1),
  $2191(10),
  $21E8(10),
  $21E9(0),
  $2192(1),
  $2193(23),
  $2190(3),
  $2191(1),
  $2192(2),
  $2191(22)
];
const $007EI$007E = [
  $21E8(1),
  $21E9(23),
  $2192(2),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(3),
  $2191(1)
];
const $007EM$007E = [
  $21E8(1),
  $21E9(23),
  $2192(2),
  $2191(20),
  $2192(7),
  $2193(1),
  $2190(6),
  $2193(20),
  $2190(3),
  $2191(1),
  $21E8(9),
  $21E9(0),
  $2192(2),
  $2191(20),
  $2192(7),
  $2193(1),
  $2190(6),
  $2193(20),
  $2190(3),
  $2191(1),
  $21E8(9),
  $21E9(0),
  $2192(2),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(3),
  $2191(1)
];
const $007EN$007E = [
  $21E8(1),
  $21E9(23),
  $2192(2),
  $2191(20),
  $2192(8),
  $2193(1),
  $2190(7),
  $2193(20),
  $2190(3),
  $2191(1),
  $21E8(10),
  $21E9(0),
  $2192(2),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(3),
  $2191(1)
];
const $007ER$007E = $007EA$007E;
const $007ES$007E = [
  $21E8(1),
  $21E9(13),
  $2192(8),
  $2193(1),
  $2190(8),
  $2191(1),
  $21E8(0),
  $21E9(10),
  $2192(10),
  $2191(12),
  $2192(1),
  $2193(13),
  $2190(11),
  $2191(1),
  $21E8(2),
  $21E7(20),
  $2192(8),
  $2191(2),
  $2192(1),
  $2193(3),
  $2190(8),
  $2193(7),
  $2190(1),
  $2191(8)
];
const $007EV$007E = [
  $21E8(1),
  $21E9(23),
  $2192(12),
  $2191(22),
  $2192(1),
  $2193(23),
  $2190(13),
  $2191(1),
  $21E8(2),
  $21E7(22),
  $2192(1),
  $2193(20),
  $2190(1),
  $2191(20)
];
const update = positions => {
  return dir => (() => {
    const x = S.fst(positions[0]);
    const y = S.snd(positions[0]);
    return [
      dir[0] === Symbol.for('h') ? S.Pair(x + dir[1])(y) : dir[0] === Symbol.for('v') ? S.Pair(x)(y + dir[1]) : S.Pair(x + dir[1][0])(y + dir[1][1]),
      ...positions
    ];
  })();
};
const reset = path => {
  return (() => {
    const paths = S.extend(S.I)(S.reduce(update)([S.Pair(0)(0)])(path));
    const xs = S.chain(S.map(S.fst))(paths);
    const ys = S.chain(S.map(S.snd))(paths);
    const dx = S.reduce(S.max)(0)(xs) - xs[0];
    const dy = 0 - ys[0];
    return [
      Symbol.for('m'),
      [
        dx,
        dy
      ]
    ];
  })();
};
const paths = S.pipe([
  S.map(char => [
    ...char,
    reset(char)
  ]),
  S.intercalate([[
      Symbol.for('m'),
      [
        6,
        0
      ]
    ]]),
  S.prepend([
    Symbol.for('M'),
    [
      0,
      0
    ]
  ])
]);
const $003Cchars$003E = paths([
  $003CD$003E,
  $003CA$003E,
  $003CV$003E,
  $003CI$003E,
  $003CD$003E,
  $003CC$003E,
  $003CH$003E,
  $003CA$003E,
  $003CM$003E,
  $003CB$003E,
  $003CE$003E,
  $003CR$003E,
  $003CS$003E,
  $003CD$003E,
  $003CE$003E,
  $003CS$003E,
  $003CI$003E,
  $003CG$003E,
  $003CN$003E
]);
const $002Dchars$002D = paths([
  $002DD$002D,
  $002DA$002D,
  $002DV$002D,
  $002DI$002D,
  $002DD$002D,
  $002DC$002D,
  $002DH$002D,
  $002DA$002D,
  $002DM$002D,
  $002DB$002D,
  $002DE$002D,
  $002DR$002D,
  $002DS$002D,
  $002DD$002D,
  $002DE$002D,
  $002DS$002D,
  $002DI$002D,
  $002DG$002D,
  $002DN$002D
]);
const $007Echars$007E = paths([
  $007ED$007E,
  $007EA$007E,
  $007EV$007E,
  $007EI$007E,
  $007ED$007E,
  $007EC$007E,
  $007EH$007E,
  $007EA$007E,
  $007EM$007E,
  $007EB$007E,
  $007EE$007E,
  $007ER$007E,
  $007ES$007E,
  $007ED$007E,
  $007EE$007E,
  $007ES$007E,
  $007EI$007E,
  $007EG$007E,
  $007EN$007E
]);
const mask = [path({
    [Symbol.for('d')]: render($003Cchars$003E),
    [Symbol.for('fill')]: '#000',
    [Symbol.for('fill-rule')]: Symbol.for('evenodd')
  })];
const fill = [
  path({
    [Symbol.for('d')]: render($002Dchars$002D),
    [Symbol.for('fill')]: '#999'
  }),
  path({
    [Symbol.for('d')]: render($007Echars$007E),
    [Symbol.for('fill')]: '#666'
  })
];
const default_ = {
  [Symbol.for('mask')]: mask,
  [Symbol.for('fill')]: fill
};
export default default_;
export {
  fill,
  mask
};
