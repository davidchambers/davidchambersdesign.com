import S from "sanctuary";

export default related-posts;

related-posts posts post = {
  tags = Reflect.construct (Set, [post.tags]);
  posts
  |> S.mapMaybe {this => {
       if this.slug == post.slug then S.Nothing else {
         score = this.tags.filter(x => tags.has(x)).length
                 / Math.sqrt {Reflect.construct (Set, [[...tags, ...this.tags]])}.size;
         if score < 0.5 then S.Nothing else S.Just {...this, score: score}
       }
     }}
  |> S.sortBy {this => {
       S.Pair {-this.score}
              {Math.abs $ this.datetime.diff(post.datetime).milliseconds}
     }}
  |> posts => posts.slice (0, 5)
};
