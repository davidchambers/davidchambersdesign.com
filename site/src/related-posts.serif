import path from "node:path"

import s from "./sanctuary.serif"

export default related-posts

intersection set-1 set-2 =
  (new Set (.filter (.has _ set-1) #[...set-2]))

union set-1 set-2 =
  (new Set #[...set-1 ...set-2])

similarity set-1 set-2 = {
  (intersection set-1 set-2).size / (Math.sqrt (union set-1 set-2).size)
}

seconds-between from to =
  (.diff from "seconds" to).seconds

with-scores that this = {
  score = (similarity (new Set that:tags)
                      (new Set this:tags));
  primary = (s:negate score);
  secondary = (Math.abs (seconds-between that:datetime
                                         this:datetime));
  if score >= 0.5 then {
    (s:Just (s:Pair (s:Pair primary secondary) this))
  } else {
    s:Nothing
  }
}

related-posts posts post =
  (s:pipe #[(s:reject (this -> this:slug === post:slug))
            (s:map-maybe (with-scores post))
            s:sort
            (s:map s:snd)
            (.slice 0 5 _)]
          posts)
