import * from "serif/es"

import default as s from "./sanctuary.serif"

export {render ⇦ ⇨ ⇧ ⇩ ← → ↑ ↓}

reducer prev path curr = {
  if (0 curr) === :M {
    if {(0 prev) === :M || (0 prev) === :m} {
      (s:Pair curr path)  ; ignore previous move
    } else {
      (s:Pair curr #[...path prev])
    }
  } else {
    if {(0 prev) === :M || (0 prev) === :m} && (0 curr) === :m {
      (s:Pair #[(0 prev)
                #[(0 (1 prev)) + (0 (1 curr))
                  (1 (1 prev)) + (1 (1 curr))]]
              path)
    } else {
      (s:Pair curr #[...path prev])
    }
  }
}

simplify =
  (s:array #[]
           (head tail ->
              (s:pair s:append
                      (s:reduce (s:pair reducer)
                                (s:Pair head #[])
                                tail))))

render =
  (s:pipe #[simplify
            s:join
            (s:map (x -> if typeof x === "symbol" (Symbol.keyFor x) else (String x)))
            s:unwords])

⇦ x = #[:m #[{- x} 0]]
⇨ x = #[:m #[{+ x} 0]]
⇧ y = #[:m #[0 {- y}]]
⇩ y = #[:m #[0 {+ y}]]

← x = #[:h {- x}]
→ x = #[:h {+ x}]
↑ y = #[:v {- y}]
↓ y = #[:v {+ y}]
