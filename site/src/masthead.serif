import S from "sanctuary";

import {path} from "./elements.serif";
import * from "./orthogonal.serif";

export {fill, mask};

mask-chars = {
  A: [
    → 14, ↓ 24, ←  4, ↑ 10, ←  6, ↓ 10, ←  4, ↑ 24,
    ⇨  4, ⇩  4,
    →  6, ↓  6, ←  6, ↑  6,
  ],
  B: [
    → 14, ↓ 24, ← 14, ↑ 24,
    ⇨  4, ⇩  4,
    →  6, ↓  6, ←  6, ↑  6,
    ⇨  0, ⇩ 10,
    →  6, ↓  6, ←  6, ↑  6,
  ],
  C: [
    → 14, ↓  9, ←  4, ↑  5, ←  6, ↓ 16, →  6, ↑  5, →  4, ↓  9, ← 14, ↑ 24,
  ],
  D: [
    → 14, ↓ 24, ← 14, ↑ 24,
    ⇨  4, ⇩  4,
    →  6, ↓ 16, ←  6, ↑ 16,
  ],
  E: [
    → 12, ↓  4, ←  8, ↓  6, →  8, ↓  4, ←  8, ↓  6, →  8, ↓  4, ← 12, ↑ 24,
  ],
  G: [
    → 14, ↓  4, ← 10, ↓ 16, →  6, ↑ 10, →  4, ↓ 14, ← 14, ↑ 24,
  ],
  H: [
    →  4, ↓ 10, →  6, ↑ 10, →  4, ↓ 24, ←  4, ↑ 10, ←  6, ↓ 10, ←  4, ↑ 24,
  ],
  I: [
    →  4, ↓ 24, ←  4, ↑ 24,
  ],
  M: [
    → 22, ↓ 24, ←  4, ↑ 20, ←  5, ↓ 20, ←  4, ↑ 20, ←  5, ↓ 20, ←  4, ↑ 24,
  ],
  N: [
    → 14, ↓ 24, ←  4, ↑ 20, ←  6, ↓ 20, ←  4, ↑ 24,
  ],
  R: [
    → 14, ↓ 24, ←  4, ↑ 10, ←  6, ↓ 10, ←  4, ↑ 24,
    ⇨  4, ⇩  4,
    →  6, ↓  6, ←  6, ↑  6,
  ],
  S: [
    → 12, ↓  4, ←  8, ↓  6, →  8, ↓ 14, ← 12, ↑  4, →  8, ↑  6, ←  8, ↑ 14,
  ],
  V: [
    →  4, ↓ 20, →  6, ↑ 20, →  4, ↓ 24, ← 14, ↑ 24,
  ],
};

line-chars = {
  A: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 10,
    →  6, ↑  6, →  1, ↓  7, ←  7, ↑  1,
    ⇨  6, ⇩  4,
    →  1, ↓ 10, ←  1, ↑ 10,
  ],
  B: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 10,
    →  6, ↑  6, →  1, ↓  7, ←  7, ↑  1,
    ⇨  0, ⇩ 10,
    →  6, ↑  6, →  1, ↓  7, ←  7, ↑  1,
  ],
  C: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 20,
    →  6, ↑  5, →  4, ↓  1, ←  3, ↓  5, ←  7, ↑  1,
    ⇨  6, ⇧ 16,
    →  1, ↓  5, ←  1, ↑  5,
  ],
  D: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 20,
    →  6, ↑ 16, →  1, ↓ 17, ←  7, ↑  1,
  ],
  E: [
    → 12, ↓  1, ← 11, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 10,
    →  8, ↓  1, ←  8, ↑  1,
    ⇨  0, ⇩ 10,
    →  8, ↓  1, ←  8, ↑  1,
  ],
  G: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 20,
    →  6, ↑ 10, →  4, ↓  1, ←  3, ↓ 10, ←  7, ↑  1,
  ],
  H: [
    →  4, ↓  1, ←  3, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 10,
    →  6, ↑ 10, →  4, ↓  1, ←  3, ↓ 10, ←  7, ↑  1,
    ⇨  6, ⇩  4,
    →  1, ↓ 10, ←  1, ↑ 10,
  ],
  I: [
    →  4, ↓  1, ←  3, ↓ 23, ←  1, ↑ 24,
  ],
  M: [
    → 22, ↓  1, ← 21, ↓ 23, ←  1, ↑ 23,
    ⇨  9, ⇩  3,
    →  1, ↓ 20, ←  1, ↑ 20,
    ⇨  9, ⇩  0,
    →  1, ↓ 20, ←  1, ↑ 20,
  ],
  N: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨ 10, ⇩  4,
    →  1, ↓ 20, ←  1, ↑ 20,
  ],
  R: [
    → 14, ↓  1, ← 13, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 10,
    →  6, ↑  6, →  1, ↓  7, ←  7, ↑  1,
    ⇨  6, ⇩  4,
    →  1, ↓ 10, ←  1, ↑ 10,
  ],
  S: [
    → 12, ↓  1, ← 11, ↓ 13, ←  1, ↑ 14,
    ⇨  0, ⇩ 20,
    →  8, ↑  6, →  1, ↓  7, ←  8, ↓  3, ←  1, ↑  4,
    ⇨  4, ⇧ 10,
    →  8, ↓  1, ←  8, ↑  1,
  ],
  V: [
    →  4, ↓  1, ←  3, ↓ 23, ←  1, ↑ 24,
    ⇨  4, ⇩ 20,
    →  6, ↑ 20, →  4, ↓  1, ←  3, ↓ 20, ←  7, ↑  1,
  ],
};

fill-chars = {
  A: [
    ⇨  1, ⇩ 23,
    →  2, ↑ 10, →  8, ↓  1, ←  7, ↓ 10, ←  3, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↓  1, ←  7, ↓  7, ←  1, ↑  8,
    ⇨  8, ⇩ 20,
    →  2, ↑ 22, →  1, ↓ 23, ←  3, ↑  1,
  ],
  B: [
    ⇨  1, ⇩ 23,
    → 12, ↑ 22, →  1, ↓ 23, ← 13, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↓  1, ←  7, ↓  7, ←  1, ↑  8,
    ⇨  0, ⇩ 10,
    →  8, ↓  1, ←  7, ↓  7, ←  1, ↑  8,
  ],
  C: [
    ⇨  1, ⇩ 23,
    → 12, ↑  7, →  1, ↓  8, ← 13, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↓  1, ←  7, ↓ 17, ←  1, ↑ 18,
    ⇨ 10, ⇧  2,
    →  1, ↓  8, ←  3, ↑  1, →  2, ↑  7,
  ],
  D: [
    ⇨  1, ⇩ 23,
    → 12, ↑ 22, →  1, ↓ 23, ← 13, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↓  1, ←  7, ↓ 17, ←  1, ↑ 18,
  ],
  E: [
    ⇨  1, ⇩ 23,
    → 10, ↑  2, →  1, ↓  3, ← 11, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↑  2, →  1, ↓  3, ←  8, ↓  7, ←  1, ↑  8,
    ⇨  0, ⇩ 10,
    →  8, ↑  2, →  1, ↓  3, ←  8, ↓  7, ←  1, ↑  8,
  ],
  G: [
    ⇨  1, ⇩ 23,
    → 12, ↑ 12, →  1, ↓ 13, ← 13, ↑  1,
    ⇨  2, ⇧ 20,
    → 10, ↑  2, →  1, ↓  3, ← 10, ↓ 17, ←  1, ↑ 18,
  ],
  H: [
    ⇨  1, ⇩ 23,
    →  2, ↑ 10, →  8, ↓  1, ←  7, ↓ 10, ←  3, ↑  1,
    ⇨  2, ⇧ 22,
    →  1, ↓ 10, ←  1, ↑ 10,
    ⇨ 10, ⇩  0,
    →  1, ↓ 23, ←  3, ↑  1, →  2, ↑ 22,
  ],
  I: [
    ⇨  1, ⇩ 23,
    →  2, ↑ 22, →  1, ↓ 23, ←  3, ↑  1,
  ],
  M: [
    ⇨  1, ⇩ 23,
    →  2, ↑ 20, →  7, ↓  1, ←  6, ↓ 20, ←  3, ↑  1,
    ⇨  9, ⇩  0,
    →  2, ↑ 20, →  7, ↓  1, ←  6, ↓ 20, ←  3, ↑  1,
    ⇨  9, ⇩  0,
    →  2, ↑ 22, →  1, ↓ 23, ←  3, ↑  1,
  ],
  N: [
    ⇨  1, ⇩ 23,
    →  2, ↑ 20, →  8, ↓  1, ←  7, ↓ 20, ←  3, ↑  1,
    ⇨ 10, ⇩  0,
    →  2, ↑ 22, →  1, ↓ 23, ←  3, ↑  1,
  ],
  R: [
    ⇨  1, ⇩ 23,
    →  2, ↑ 10, →  8, ↓  1, ←  7, ↓ 10, ←  3, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↓  1, ←  7, ↓  7, ←  1, ↑  8,
    ⇨  8, ⇩ 20,
    →  2, ↑ 22, →  1, ↓ 23, ←  3, ↑  1,
  ],
  S: [
    ⇨  1, ⇩ 13,
    →  8, ↓  1, ←  8, ↑  1,
    ⇨  0, ⇩ 10,
    → 10, ↑ 12, →  1, ↓ 13, ← 11, ↑  1,
    ⇨  2, ⇧ 20,
    →  8, ↑  2, →  1, ↓  3, ←  8, ↓  7, ←  1, ↑  8,
  ],
  V: [
    ⇨  1, ⇩ 23,
    → 12, ↑ 22, →  1, ↓ 23, ← 13, ↑  1,
    ⇨  2, ⇧ 22,
    →  1, ↓ 20, ←  1, ↑ 20,
  ],
};

next {w, x, y} [dir, mag] = {
  switch dir
  when "h" then {
    dx = mag;
    x' = x + dx;
    {w: S.max w x', x: x', y: y}
  }
  when "v" then {
    dy = mag;
    y' = y + dy;
    {w: w, x: x, y: y'}
  }
  when "m" then {
    [dx, dy] = mag;
    x' = x + dx;
    y' = y + dy;
    {w: S.max w x', x: x', y: y'}
  }
};

reset path = {
  {w, x, y} = S.reduce next {w: 0, x: 0, y: 0} path;
  ["m", [w - x, -y]]
};

paths chars = [
  ...{chars.slice (0, 1) >>= char => [["M", [0, 0]], ...char, reset char]},
  ...{chars.slice (1   ) >>= char => [["m", [6, 0]], ...char, reset char]},
];

chars = Array.from "DAVIDCHAMBERSDESIGN";

mask = [path {d: render $ paths $ {char => mask-chars[char]} <$> chars, fill: "#000", fill-rule: "evenodd"}];
fill = [path {d: render $ paths $ {char => line-chars[char]} <$> chars, fill: "#999"},
        path {d: render $ paths $ {char => fill-chars[char]} <$> chars, fill: "#666"}];
