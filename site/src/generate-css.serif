import S from "sanctuary";

import screen from "./css/screen.serif";

export default generate-css;

coerce x = {
  if Array.isArray x then {
    S.unwords {S.map coerce x}
  } else if typeof x == "symbol" then {
    Symbol.keyFor x
  } else {
    String x
  }
};

split-every-2 xs = {
  S.array []
          {k => S.array [] $ v => asdf => [[k, v], ...{split-every-2 asdf}]}
          xs
};

vendor-prefix unprefixed prefixed = {
  S.chain {property => {
             if property[0] === unprefixed then {
               [...prefixed, unprefixed].map(k => [k, property[1]])
             } else {
               [[property[0], property[1]]]
             }
           }}
};

vendor-prefixes = S.pipe [
  vendor-prefix :border-radius
                [:-webkit-border-radius,
                    :-moz-border-radius,
                     :-ms-border-radius,
                      :-o-border-radius],
  vendor-prefix :box-shadow
                [:-webkit-box-shadow,
                    :-moz-box-shadow],
  vendor-prefix :transition-duration
                [:-webkit-transition-duration,
                    :-moz-transition-duration,
                      :-o-transition-duration],
  vendor-prefix :transition-timing-function
                [:-webkit-transition-timing-function,
                    :-moz-transition-timing-function,
                      :-o-transition-timing-function],
];

format-block selectors properties = {
  `${
    selectors.join(",\n")
  } {\n${
    properties.map({property => `  ${coerce property[0]}: ${coerce property[1]};\n`}).join("")
  }}\n`
};

generate-css = S.pipe [
  screen,
  split-every-2,
  S.map {pairs => format-block pairs[0] $ vendor-prefixes $ split-every-2 pairs[1]},
  S.joinWith "\n",
] coerce;
